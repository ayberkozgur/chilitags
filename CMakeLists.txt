cmake_minimum_required(VERSION 2.8)

project(chilitags)

set(CPACK_PACKAGE_VERSION_MAJOR "2")
set(CPACK_PACKAGE_VERSION_MINOR "0")
set(CPACK_PACKAGE_VERSION_PATCH "0")

add_definitions(-std=c++11)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/")
find_package(OpenCV REQUIRED )
include_directories(${OpenCV_INCLUDE_DIRS})
message(STATUS "OpenCV version: ${OpenCV_VERSION}")

##########################################
##           Options                   ###
##########################################

option(WITH_SAMPLES			"compile misc demos" OFF)
option(WITH_TESTS			"build tests" OFF)
if(DEFINED ANDROID) #OPENCV has a nice macro for this: OCV_OPTION, consider using it. 
	option(WITH_TOOLS			        "provides the marker generation tool" OFF)
	option(WITH_JNI_BINDINGS		    "JNI bindings compatible with ordinary Java and Android" ON)
	option(ANDROID_INSTALL_LIBRARIES	"Whether to install the chilitag libraries inside ANDROID_PROJECT_ROOT (e.g under libs/armeabi-v7a/)" ON)
else()
	option(WITH_TOOLS			        "provides the marker generation tool" ON)
	option(WITH_JNI_BINDINGS		    "JNI bindings compatible with ordinary Java and Android" OFF)
	option(ANDROID_INSTALL_LIBRARIES	"Whether to install the chilitag libraries inside ANDROID_PROJECT_ROOT (e.g under libs/armeabi-v7a/)" OFF)
endif()


if(${OpenCV_VERSION} VERSION_GREATER 2.9.0)
    add_definitions(-DOPENCV3)
endif()

include_directories(include)
add_subdirectory(src)

# documentation generation
include("${CMAKE_SOURCE_DIR}/cmake/TargetDoc.cmake" OPTIONAL)

if (WITH_TOOLS)

    if(NOT OPENCV_HIGHGUI_FOUND)
        message(FATAL_ERROR "OpenCV compiled without support for highgui! Can not compile detector.")
    endif()

	add_subdirectory(tools)
endif()

if (WITH_SAMPLES)

    if(NOT OPENCV_HIGHGUI_FOUND)
        message(FATAL_ERROR "OpenCV compiled without support for highgui! Can not compile creator.")
    endif()

	add_subdirectory(samples)
endif()

if (WITH_TESTS)

    if(NOT OPENCV_TS_FOUND)
        message(FATAL_ERROR "OpenCV compiled without support for ts! Can not compile tests.")
    endif()

	set(TEST_DATA
		"../../../chilitags-testdata/"
		CACHE
		PATH
		"specify the root directory of the test data (absolute, or relative to the execution directory of the tests)")
	enable_testing()
	add_subdirectory(test)
endif()

if(WITH_JNI_BINDINGS)

    add_subdirectory(bindings/jni)
endif()

if(ANDROID_INSTALL_LIBRARIES)
    
    if(NOT DEFINED ENV{ANDROID_ABI})
        message(FATAL_ERROR "Please define the ANDROID_ABI environment variable first, e.g armeabi-v7a")
    endif()
    
    if(NOT ANDROID_PROJECT_ROOT)
        message(FATAL_ERROR "ANDROID_PROJECT_ROOT undefined, can't install libraries inside Android project.")
    endif()
endif()
